#pragma once
#include "widgets.h"

extern widget_t __widget_emu_button;

typedef struct __attribute__((packed)) {
    uint8_t state;
} widget_emu_button_ctx_t;

typedef	struct {
    char key;
    uint8_t index;
} __emu_button_index_cfg_t;

typedef	struct {
    xy_t size;
    unsigned color_released;
    unsigned color_pressed;
    unsigned color_text;
    __emu_button_index_cfg_t * index_cfg;
} widget_emu_button_cfg_t;



/*
    ок ну допустим у тебя есть элемент кнопка. как и любой виджет сама кнопка имеет контекст в котором
        form_t f                форма
        uint8_t size
        uint8_t idx
        uint8_t ctx
            нам интересно тут сделать состояние кнопки, либо еще и указатель где его посмотреть, либо куда положить если мы решили его поменять из интерфейса детектировав событие!
                а тогда если мы хотим чтобы интерфейс регал изменение кнопки то нам нада функцию коллбэк )
                как это выглядит ???
                    у нас какойто лайоут рисует кнопку. одну и тоже но подсовывает ей постоянно разный контекст и она рисуется в разных координатах, ага и с разным текстом - значит в контексте интересно 
            какаято должна быть структура описывающая данный экземпляр кнопки
                символ на кнопке
                символ на который реагировать при евенте

            а дальше пошел контекст вложеных виджетов, например текста

    например есть список какихто пунктов меню
        там тоже для каждого элемента динамически считается контекст
        получается нужен текст и цветовая схема чтобы например выделять один элемент

        также может быть что текст будет динамически вычисляться и

    ок план такой что я сейчас передам в контекст текста схему и текст, и удалю icfg


    ты хочешь сделать их много

*/